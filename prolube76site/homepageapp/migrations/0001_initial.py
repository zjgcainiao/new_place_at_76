# Generated by Django 4.1.5 on 2023-07-10 02:57

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccountClassModel',
            fields=[
                ('account_class_id', models.AutoField(primary_key=True, serialize=False)),
                ('account_type', models.CharField(max_length=30, null=True)),
                ('account_last_updated_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'accountclass',
                'verbose_name_plural': 'accountclasses',
                'db_table': 'accountclasses_new_03',
                'ordering': ['-account_class_id'],
            },
        ),
        migrations.CreateModel(
            name='AddressesNewSQL02Model',
            fields=[
                ('address_id', models.AutoField(primary_key=True, serialize=False)),
                ('address_type_id', models.IntegerField()),
                ('address_company_or_ATTN', models.CharField(blank=True, max_length=50)),
                ('address_line_01', models.CharField(blank=True, max_length=80)),
                ('address_city', models.CharField(blank=True, max_length=50)),
                ('address_state', models.CharField(blank=True, max_length=50)),
                ('address_zip_code', models.CharField(blank=True, max_length=30)),
                ('address_created_at', models.DateTimeField(auto_now_add=True)),
                ('address_last_updated_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'address',
                'verbose_name_plural': 'addresses',
                'db_table': 'addresses_new_03',
                'ordering': ['-address_id'],
            },
        ),
        migrations.CreateModel(
            name='BodyStylesModel',
            fields=[
                ('body_style_id', models.AutoField(primary_key=True, serialize=False)),
                ('body_style_name', models.CharField(max_length=150, null=True)),
                ('body_style_created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'bodystyle',
                'verbose_name_plural': 'bodystyles',
                'db_table': 'bodystyles_new_03',
                'ordering': ['-body_style_id'],
            },
        ),
        migrations.CreateModel(
            name='BrakesModel',
            fields=[
                ('brake_id', models.AutoField(primary_key=True, serialize=False)),
                ('brake_system_type', models.CharField(max_length=150, null=True)),
                ('brake_created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'brake',
                'verbose_name_plural': 'brakes',
                'db_table': 'brakes_new_03',
                'ordering': ['-brake_id'],
            },
        ),
        migrations.CreateModel(
            name='CannedJobsNewSQL02Model',
            fields=[
                ('canned_job_id', models.AutoField(primary_key=True, serialize=False)),
                ('canned_job_title', models.CharField(max_length=50, null=True)),
                ('canned_job_description', models.CharField(max_length=200, null=True)),
                ('canned_job_is_in_quick_menu', models.BooleanField(default=False)),
                ('canned_job_category_id', models.IntegerField(blank=True, null=True)),
                ('canned_job_applied_year', models.IntegerField(blank=True, null=True)),
                ('canned_job_applied_make_id', models.IntegerField(blank=True, null=True)),
                ('canned_job_applied_submodel_id', models.IntegerField(blank=True, null=True)),
                ('canned_job_vehicle_class', models.CharField(max_length=50, null=True)),
                ('canned_job_last_updated_date', models.DateTimeField(auto_now=True, null=True)),
                ('canned_job_created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'db_table': 'cannedjobs_new_03',
                'ordering': ['-canned_job_id'],
            },
        ),
        migrations.CreateModel(
            name='CategoryModel',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('category_description', models.CharField(blank=True, max_length=200)),
                ('category_display', models.IntegerField(blank=True, null=True)),
                ('category_created_at', models.DateTimeField(auto_now_add=True)),
                ('category_last_updated_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'categories_new_03',
                'ordering': ['-category_id'],
            },
        ),
        migrations.CreateModel(
            name='CustomerAddressesNewSQL02Model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customeraddress_address_created_at', models.DateTimeField(auto_now_add=True)),
                ('customeraddress_last_updated_date', models.DateTimeField(auto_now=True)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homepageapp.addressesnewsql02model')),
            ],
            options={
                'db_table': 'customeraddresses_new_03',
                'ordering': ['-address', '-customer'],
            },
        ),
        migrations.CreateModel(
            name='CustomerEmailsNewSQL02Model',
            fields=[
                ('customeremail_id', models.AutoField(primary_key=True, serialize=False)),
                ('customeremail_is_selected', models.BooleanField(default=True)),
                ('customeremail_created_at', models.DateTimeField(auto_now_add=True)),
                ('customeremail_last_updated_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'customeremails_new_03',
                'ordering': ['-customeremail_id', '-email'],
            },
        ),
        migrations.CreateModel(
            name='CustomerPhonesNewSQL02Model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customerphone_created_at', models.DateTimeField(auto_now_add=True)),
                ('customerphone_last_updated_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'customerphones_new_03',
                'ordering': ['-customer', '-phone'],
            },
        ),
        migrations.CreateModel(
            name='CustomersNewSQL02Model',
            fields=[
                ('customer_id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_title_id', models.CharField(max_length=20, null=True)),
                ('customer_first_name', models.CharField(max_length=50, null=True)),
                ('customer_last_name', models.CharField(max_length=50, null=True)),
                ('customer_middle_name', models.CharField(blank=True, max_length=50, null=True)),
                ('customer_dob', models.DateTimeField(blank=True, null=True)),
                ('customer_spouse_name', models.CharField(max_length=50, null=True)),
                ('customer_is_okay_to_charge', models.BooleanField(default=True)),
                ('customer_memo_1', models.CharField(max_length=4000, null=True)),
                ('customer_is_tax_exempt', models.BooleanField(default=False)),
                ('customer_resale_permit_nbr', models.CharField(max_length=20, null=True)),
                ('customer_is_in_social_crm', models.BooleanField(default=True)),
                ('customer_hear_from_us_type', models.CharField(max_length=20, null=True)),
                ('customer_last_visit_date', models.DateTimeField(null=True)),
                ('customer_first_visit_date', models.DateTimeField(null=True)),
                ('customer_is_deleted', models.BooleanField(default=False)),
                ('customer_memebership_nbr', models.CharField(max_length=20, null=True)),
                ('customer_does_allow_SMS', models.BooleanField(default=True)),
                ('customer_email_address_in_json', models.CharField(max_length=200, null=True)),
                ('customer_last_updated_date', models.DateTimeField(auto_now=True)),
                ('customer_is_created_from_appointments', models.BooleanField(default=False)),
                ('customer_fleet_vendor_id', models.CharField(max_length=100, null=True)),
                ('customer_created_at', models.DateTimeField(auto_now_add=True)),
                ('addresses', models.ManyToManyField(related_name='addresses', through='homepageapp.CustomerAddressesNewSQL02Model', to='homepageapp.addressesnewsql02model')),
            ],
            options={
                'verbose_name': 'customer',
                'verbose_name_plural': 'customers',
                'db_table': 'customers_new_03',
                'ordering': ['-customer_id'],
            },
        ),
        migrations.CreateModel(
            name='DrivesModel',
            fields=[
                ('drive_id', models.AutoField(primary_key=True, serialize=False)),
                ('drive_type', models.CharField(max_length=150, null=True)),
                ('drive_created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'drive',
                'verbose_name_plural': 'drives',
                'db_table': 'drives_new_03',
                'ordering': ['-drive_id'],
            },
        ),
        migrations.CreateModel(
            name='EmailsNewSQL02Model',
            fields=[
                ('email_id', models.IntegerField(primary_key=True, serialize=False)),
                ('email_type_id', models.IntegerField()),
                ('email_address', models.EmailField(max_length=254)),
                ('email_description', models.CharField(max_length=255)),
                ('email_created_at', models.DateTimeField(auto_now_add=True)),
                ('email_last_updated_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'emails_new_03',
                'ordering': ['-email_id'],
            },
        ),
        migrations.CreateModel(
            name='EnginesModel',
            fields=[
                ('engine_id', models.AutoField(primary_key=True, serialize=False)),
                ('engine_displacement_CID', models.DecimalField(decimal_places=1, max_digits=10, null=True)),
                ('engine_displacement_liter', models.DecimalField(decimal_places=1, max_digits=10, null=True)),
                ('engine_number_of_cylinder', models.IntegerField(null=True)),
                ('engine_valve_per_cyclinder', models.IntegerField(null=True)),
                ('engine_head_configuration_type', models.CharField(blank=True, max_length=100, null=True)),
                ('engine_boost_type', models.CharField(blank=True, max_length=100, null=True)),
                ('engine_ignition_system', models.CharField(blank=True, max_length=100, null=True)),
                ('engine_vin_code', models.CharField(blank=True, max_length=20, null=True)),
                ('engine_fuel_system', models.CharField(blank=True, max_length=100, null=True)),
                ('engine_fuel_delivery_method_type', models.CharField(blank=True, max_length=100, null=True)),
                ('engine_fuel_type', models.CharField(blank=True, max_length=100, null=True)),
                ('engine_fuel_control_type', models.CharField(blank=True, max_length=100, null=True)),
                ('engine_block_configuration', models.CharField(blank=True, max_length=100, null=True)),
                ('engine_fuel_system_configuration', models.CharField(blank=True, max_length=100, null=True)),
                ('engine_created_at', models.DateTimeField(auto_now_add=True)),
                ('engine_last_updated_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'engine',
                'verbose_name_plural': 'engines',
                'db_table': 'engines_new_03',
                'ordering': ['-engine_id'],
            },
        ),
        migrations.CreateModel(
            name='GVWsModel',
            fields=[
                ('gvw_id', models.AutoField(primary_key=True, serialize=False)),
                ('gvw_text', models.CharField(max_length=150, null=True)),
                ('gvw_created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'gvw',
                'verbose_name_plural': 'gvws',
                'db_table': 'gvws_new_03',
                'ordering': ['-gvw_id'],
            },
        ),
        migrations.CreateModel(
            name='InvoiceStatusModel',
            fields=[
                ('invoice_status_id', models.AutoField(primary_key=True, serialize=False)),
                ('invoice_status_description', models.CharField(max_length=30, null=True)),
                ('invoice_status_created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'invoicestatus',
                'verbose_name_plural': 'invoicestatuses',
                'db_table': 'invoicestatuess_new_03',
                'ordering': ['invoice_status_id'],
            },
        ),
        migrations.CreateModel(
            name='LineItemsNewSQL02Model',
            fields=[
                ('line_item_id', models.AutoField(primary_key=True, serialize=False)),
                ('line_item_description', models.CharField(max_length=2000)),
                ('line_item_cost', models.DecimalField(decimal_places=2, max_digits=9)),
                ('line_item_sale', models.DecimalField(decimal_places=2, max_digits=9)),
                ('line_item_is_tax_exempt', models.BooleanField(default=False)),
                ('line_item_has_no_commission', models.BooleanField(default=True)),
                ('line_item_has_fixed_commission', models.BooleanField(default=False)),
                ('line_item_order_revision_id', models.IntegerField(null=True)),
                ('line_item_labor_sale', models.DecimalField(decimal_places=2, max_digits=12)),
                ('line_item_part_sale', models.DecimalField(decimal_places=2, max_digits=12)),
                ('line_item_part_only_sale', models.DecimalField(decimal_places=2, max_digits=12)),
                ('line_item_labor_only_sale', models.DecimalField(decimal_places=2, max_digits=12)),
                ('line_item_sublet_sale', models.DecimalField(decimal_places=2, max_digits=12)),
                ('line_item_package_sale', models.DecimalField(decimal_places=2, max_digits=12)),
                ('line_item_tire_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('line_item_parent_line_item_id', models.IntegerField(null=True)),
                ('line_item_created_at', models.DateTimeField(auto_now_add=True)),
                ('line_item_last_updated_date', models.DateTimeField(auto_now=True, null=True)),
                ('line_item_account_class', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lineitem_accountclasses', to='homepageapp.accountclassmodel')),
                ('line_item_canned_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='homepageapp.cannedjobsnewsql02model')),
                ('line_item_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='homepageapp.categorymodel')),
            ],
            options={
                'db_table': 'lineitems_new_03',
                'ordering': ['-line_item_id'],
            },
        ),
        migrations.CreateModel(
            name='MakesNewSQL02Model',
            fields=[
                ('make_id', models.AutoField(primary_key=True, serialize=False)),
                ('make_name', models.CharField(max_length=30, null=True)),
                ('make_created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'make',
                'verbose_name_plural': 'makes',
                'db_table': 'makes_new_03',
                'ordering': ['-make_id'],
            },
        ),
        migrations.CreateModel(
            name='ModelsNewSQL02Model',
            fields=[
                ('model_id', models.AutoField(primary_key=True, serialize=False)),
                ('model_name', models.CharField(max_length=30, null=True)),
                ('model_created_at', models.DateTimeField(auto_now_add=True)),
                ('make', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homepageapp.makesnewsql02model')),
            ],
            options={
                'verbose_name': 'model',
                'verbose_name_plural': 'models',
                'db_table': 'models_new_03',
                'ordering': ['-model_id', 'make'],
            },
        ),
        migrations.CreateModel(
            name='MyShopVehicleConfigsModel',
            fields=[
                ('myshop_vehicle_config_id', models.AutoField(primary_key=True, serialize=False)),
                ('myshop_year_id', models.IntegerField(null=True)),
                ('myshop_vehicle_config_created_at', models.DateTimeField(auto_now_add=True)),
                ('myshop_GVW', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='myshop_gvws', to='homepageapp.gvwsmodel')),
                ('myshop_bodystyle', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='myshop_bodystyles', to='homepageapp.bodystylesmodel')),
                ('myshop_brake', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='myshop_brakes', to='homepageapp.brakesmodel')),
                ('myshop_drives', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='homepageapp.drivesmodel')),
                ('myshop_engine', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='myshop_engines', to='homepageapp.enginesmodel')),
                ('myshop_make', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='myshop_makes', to='homepageapp.makesnewsql02model')),
                ('myshop_model', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='myshop_models', to='homepageapp.modelsnewsql02model')),
            ],
            options={
                'verbose_name': 'myshopvehicleconfig',
                'verbose_name_plural': 'myshopvehicleconfigs',
                'db_table': 'myshopvehicleconfigs_new_03',
                'ordering': ['-myshop_vehicle_config_id'],
            },
        ),
        migrations.CreateModel(
            name='PaymentTransactionsModel',
            fields=[
                ('payment_transaction_id', models.AutoField(primary_key=True, serialize=False)),
                ('payment_last_updated_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'paymenttransactions_new_03',
                'ordering': ['-payment_transaction_id'],
            },
        ),
        migrations.CreateModel(
            name='PhoneDescModel',
            fields=[
                ('phone_desc_id', models.IntegerField(primary_key=True, serialize=False)),
                ('phone_desc', models.CharField(max_length=50, null=True)),
                ('phone_order', models.IntegerField()),
                ('phone_desc_default_type', models.CharField(max_length=5, null=True)),
                ('phone_desc_created_at', models.DateTimeField(auto_now_add=True)),
                ('phone_desc_last_updated_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'phonedesc',
                'verbose_name_plural': 'phonedescs',
                'db_table': 'phonedescs_new_03',
                'ordering': ['-phone_desc_id'],
            },
        ),
        migrations.CreateModel(
            name='PhonesNewSQL02Model',
            fields=[
                ('phone_id', models.AutoField(primary_key=True, serialize=False)),
                ('phone_number', models.CharField(max_length=20)),
                ('phone_number_digits_only', models.CharField(blank=True, max_length=20, null=True)),
                ('phone_number_ext', models.CharField(blank=True, max_length=10, null=True)),
                ('phone_displayed_name', models.CharField(max_length=100)),
                ('phone_memo_01', models.TextField(blank=True, null=True)),
                ('phone_created_at', models.DateTimeField(auto_now_add=True)),
                ('phone_last_updated_date', models.DateTimeField(auto_now=True)),
                ('phone_desc', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='phone_descs', to='homepageapp.phonedescmodel')),
            ],
            options={
                'verbose_name': 'phone',
                'verbose_name_plural': 'phones',
                'db_table': 'phones_new_03',
                'ordering': ['-phone_id'],
            },
        ),
        migrations.CreateModel(
            name='RepairOrderLineItemSquencesNewSQL02Model',
            fields=[
                ('ro_line_item_sequence_id', models.AutoField(primary_key=True, serialize=False)),
                ('sequence', models.IntegerField(null=True)),
                ('ro_line_item_sequence_created_at', models.DateTimeField(auto_now_add=True)),
                ('ro_line_item_sequence_last_updated_date', models.DateTimeField(auto_now=True, null=True)),
                ('line_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='homepageapp.lineitemsnewsql02model')),
            ],
            options={
                'db_table': 'repairorderlineitemsequences_new_03',
                'ordering': ['-ro_line_item_sequence_id', 'repair_order', 'line_item'],
            },
        ),
        migrations.CreateModel(
            name='RepairOrderPhasesNewSQL02Model',
            fields=[
                ('repair_order_phase_id', models.AutoField(primary_key=True, serialize=False)),
                ('repair_order_phase_description', models.CharField(max_length=50)),
                ('repair_order_phase_created_at', models.DateTimeField(auto_now_add=True)),
                ('repair_order_phase_last_updated_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'repairorderphase',
                'verbose_name_plural': 'repairorderphases',
                'db_table': 'repairorderphases_new_03',
                'ordering': ['repair_order_phase_id'],
            },
        ),
        migrations.CreateModel(
            name='SubmodelsModel',
            fields=[
                ('submodel_id', models.AutoField(primary_key=True, serialize=False)),
                ('submodel_name', models.CharField(max_length=150, null=True)),
                ('submodel_DMV_id', models.IntegerField(null=True)),
                ('submodel_created_at', models.DateTimeField(auto_now_add=True)),
                ('submodel_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homepageapp.modelsnewsql02model')),
            ],
            options={
                'verbose_name': 'submodel',
                'verbose_name_plural': 'submodels',
                'db_table': 'submodels_new_03',
                'ordering': ['-submodel_id'],
            },
        ),
        migrations.CreateModel(
            name='TaxesModel',
            fields=[
                ('tax_id', models.AutoField(primary_key=True, serialize=False)),
                ('tax_description', models.CharField(max_length=30, null=True)),
                ('tax_applied_gl_code', models.IntegerField()),
                ('tax_item_created_at', models.DateTimeField(auto_now_add=True)),
                ('tax_last_updated_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'tax',
                'verbose_name_plural': 'taxes',
                'db_table': 'taxes_new_03',
                'ordering': ['-tax_id'],
            },
        ),
        migrations.CreateModel(
            name='TransmissionsModel',
            fields=[
                ('transmission_id', models.AutoField(primary_key=True, serialize=False)),
                ('transmission_type', models.CharField(blank=True, max_length=100, null=True)),
                ('tranmission_manufacturer_code', models.CharField(blank=True, max_length=100, null=True)),
                ('transmission_control_type', models.CharField(blank=True, max_length=100, null=True)),
                ('tranmission_is_electronic_controlled', models.BooleanField(default=False)),
                ('transmission_number_of_speed', models.IntegerField(null=True)),
                ('transmission_created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'transmission',
                'verbose_name_plural': 'transmissions',
                'db_table': 'transmissions_new_03',
                'ordering': ['-transmission_id'],
            },
        ),
        migrations.CreateModel(
            name='VehiclesNewSQL02Model',
            fields=[
                ('vehicle_id', models.AutoField(primary_key=True, serialize=False)),
                ('vehicle_year', models.CharField(max_length=20, null=True)),
                ('vehicle_odometer_1', models.BigIntegerField(null=True)),
                ('vehicle_odometer_2', models.BigIntegerField(null=True)),
                ('VIN_number', models.CharField(max_length=50, null=True)),
                ('vehicle_inspection_datetime', models.DateTimeField(null=True)),
                ('vehicle_last_in_date', models.DateTimeField(null=True)),
                ('vehicle_license_plate_nbr', models.CharField(max_length=20, null=True)),
                ('vehicle_license_state', models.CharField(max_length=20, null=True)),
                ('vehicle_part_level', models.CharField(max_length=20, null=True)),
                ('vehicle_labor_level', models.CharField(max_length=20, null=True)),
                ('vehicle_used_level', models.CharField(max_length=20, null=True)),
                ('vehicle_memo_01', models.CharField(max_length=4000, null=True)),
                ('vehicle_memo_does_print_on_order', models.BooleanField(default=False)),
                ('vehicle_is_included_in_CRM_compaign', models.BooleanField(default=True)),
                ('vehicle_color', models.CharField(max_length=20, null=True)),
                ('vehicle_record_is_activate', models.BooleanField(default=True)),
                ('vehicle_class_id', models.CharField(max_length=20, null=True)),
                ('vehicle_engine_hour_in', models.DecimalField(decimal_places=1, max_digits=7)),
                ('vehicle_engine_hour_out', models.DecimalField(decimal_places=1, max_digits=7)),
                ('vehicle_active_recall_counts', models.IntegerField(null=True)),
                ('vehicle_recall_last_checked_datetime', models.DateTimeField(null=True)),
                ('vehicle_contact_phone_main_new_uid', models.CharField(max_length=36, null=True)),
                ('vehicle_created_at', models.DateTimeField(auto_now_add=True)),
                ('vehicle_last_updated_datetime', models.DateTimeField(auto_now=True, null=True)),
                ('vehicle_GVW', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicle_gvws', to='homepageapp.gvwsmodel')),
                ('vehicle_body_style', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicle_bodystyles', to='homepageapp.bodystylesmodel')),
                ('vehicle_brake', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicle_brakes', to='homepageapp.brakesmodel')),
                ('vehicle_cust', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicle_customers', to='homepageapp.customersnewsql02model')),
                ('vehicle_drive_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicle_drives', to='homepageapp.drivesmodel')),
                ('vehicle_engine', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicle_engines', to='homepageapp.enginesmodel')),
                ('vehicle_make', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicle_makes', to='homepageapp.makesnewsql02model')),
                ('vehicle_phone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicle_phones', to='homepageapp.phonesnewsql02model')),
                ('vehicle_sub_model', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicle_submodels', to='homepageapp.submodelsmodel')),
                ('vehicle_transmission', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicle_transmissions', to='homepageapp.transmissionsmodel')),
            ],
            options={
                'verbose_name': 'vehicle',
                'verbose_name_plural': 'vehicles',
                'db_table': 'vehicles_new_03',
                'ordering': ['-vehicle_id'],
            },
        ),
        migrations.CreateModel(
            name='VehicleConfigMyShopConfigsModel',
            fields=[
                ('vehicle_config_id', models.AutoField(primary_key=True, serialize=False)),
                ('vehicle_config_myshop_config_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('myshop_vehicle_config', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicleconfigmyshopconfigs', to='homepageapp.myshopvehicleconfigsmodel')),
            ],
            options={
                'verbose_name': 'vehicleconfigmyshopconfig',
                'verbose_name_plural': 'vehicleconfigmyshopconfigs',
                'db_table': 'vehicleconfigmyshopconfigs_new_03',
                'ordering': ['-vehicle_config_id'],
            },
        ),
        migrations.CreateModel(
            name='TextMessagesModel',
            fields=[
                ('text_message_id', models.AutoField(primary_key=True, serialize=False)),
                ('text_body', models.CharField(blank=True, max_length=4000, null=True)),
                ('text_external_id', models.BigIntegerField(null=True)),
                ('text_type', models.IntegerField()),
                ('text_to_phonenumber', models.CharField(max_length=15)),
                ('text_direction', models.BooleanField(default=False)),
                ('text_status', models.IntegerField()),
                ('text_error_message', models.CharField(max_length=255, null=True)),
                ('text_error_code', models.CharField(max_length=255, null=True)),
                ('text_datetime', models.DateTimeField()),
                ('text_body_size', models.IntegerField()),
                ('text_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('text_last_updated_date', models.DateTimeField(auto_now=True, null=True)),
                ('text_customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='text_customers', to='homepageapp.customersnewsql02model')),
            ],
            options={
                'verbose_name': 'textmessage',
                'verbose_name_plural': 'textmessages',
                'db_table': 'textmessages_new_03',
                'ordering': ['-text_message_id'],
            },
        ),
        migrations.CreateModel(
            name='RepairOrdersNewSQL02Model',
            fields=[
                ('repair_order_id', models.AutoField(primary_key=True, serialize=False)),
                ('repair_order_serviced_vehicle_location', models.CharField(max_length=36, null=True)),
                ('repair_order_service_status', models.CharField(max_length=36, null=True)),
                ('repair_order_scheduled_start_datetime', models.DateTimeField(null=True)),
                ('repair_order_billed_hours', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('repair_order_promise_datetime', models.DateTimeField(null=True)),
                ('repair_order_is_printed', models.BooleanField(default=False)),
                ('repair_order_invoice_is_printed', models.BooleanField(default=False)),
                ('repair_order_serviced_vehicle_in_datetime', models.DateTimeField(null=True)),
                ('repair_order_serviced_vehicle_out_datetime', models.DateTimeField(null=True)),
                ('repair_order_serviced_vehicle_hat', models.CharField(max_length=20, null=True)),
                ('repair_order_posted_datetime', models.DateTimeField(null=True)),
                ('repair_order_serviced_vehicle_odometer_in', models.BigIntegerField(null=True)),
                ('repair_order_serviced_vehicle_odometer_out', models.BigIntegerField(null=True)),
                ('repair_order_reference_number', models.CharField(max_length=30, null=True)),
                ('repair_order_receipt_printed_datetime', models.DateTimeField(null=True)),
                ('repair_order_snapshot_is_tax_exempt', models.BooleanField(default=False)),
                ('repair_order_aggr_notes', models.CharField(max_length=4000, null=True)),
                ('repair_order_observation_text_area', models.CharField(max_length=4000, null=True)),
                ('repair_order_created_as_estimate', models.BooleanField(default=False)),
                ('repair_order_snapshot_margin_pct', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('repair_order_snapshot_haz_waste_amount', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('repair_order_snapshot_labor_sale_amount', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('repair_order_snapshot_parts_sale_amount', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('repair_order_snapshot_supply_from_shop_amount', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('repair_order_snapshot_tax_haz_material_amount', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('repair_order_snapshot_tax_supply_from_shop_amount', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('repair_order_snapshot_total_tax_amount', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('repair_order_snapshot_balance_due_adjusted', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('repair_order_snapshot_discounted_amount', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('repair_order_snapshot_part_discounted_desc_id', models.IntegerField(blank=True, null=True)),
                ('repair_order_snapshot_labor_discounted_desc_id', models.IntegerField(blank=True, null=True)),
                ('repair_order_snapshot_order_total_amount', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('repair_order_snapshot_calc_haz_waste_cost', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('repair_order_snapshot_calc_shop_supply_cost', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('repair_order_serviced_vehicle_engine_hours_in', models.DecimalField(decimal_places=1, max_digits=10, null=True)),
                ('repair_order_serviced_vehicle_engine_hours_out', models.DecimalField(decimal_places=1, max_digits=10, null=True)),
                ('repair_order_appointment_request_uid', models.CharField(max_length=50, null=True)),
                ('repair_order_last_updated_date', models.DateTimeField(auto_now=True, null=True)),
                ('repair_order_created_at', models.DateTimeField(auto_now_add=True)),
                ('lineitems', models.ManyToManyField(related_name='lineitems', through='homepageapp.RepairOrderLineItemSquencesNewSQL02Model', to='homepageapp.lineitemsnewsql02model')),
                ('repair_order_customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='homepageapp.customersnewsql02model')),
                ('repair_order_phase', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='homepageapp.repairorderphasesnewsql02model')),
                ('repair_order_vehicle', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='homepageapp.vehiclesnewsql02model')),
            ],
            options={
                'verbose_name': 'repairorder',
                'verbose_name_plural': 'repairorders',
                'db_table': 'repairorders_new_03',
                'ordering': ['-repair_order_id'],
            },
        ),
        migrations.AddField(
            model_name='repairorderlineitemsquencesnewsql02model',
            name='repair_order',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='homepageapp.repairordersnewsql02model'),
        ),
        migrations.CreateModel(
            name='PaymentsModel',
            fields=[
                ('payment_id', models.AutoField(primary_key=True, serialize=False)),
                ('payment_record_number', models.IntegerField(null=True)),
                ('payment_date', models.DateTimeField(null=True)),
                ('payment_check_data', models.CharField(blank=True, max_length=100, null=True)),
                ('payment_auth_data', models.CharField(blank=True, max_length=100, null=True)),
                ('payment_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_is_NSF', models.BooleanField(default=False)),
                ('payment_is_NSF_reversal', models.BooleanField(default=False)),
                ('payment_is_fee_payment', models.BooleanField(default=False)),
                ('payment_total_payment', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_deletion_date', models.DateTimeField(null=True)),
                ('payment_verification_data', models.CharField(blank=True, max_length=200, null=True)),
                ('payment_receipt_one', models.CharField(blank=True, max_length=200, null=True)),
                ('payment_receipt_two', models.CharField(blank=True, max_length=200, null=True)),
                ('payment_receipt_three', models.CharField(blank=True, max_length=200, null=True)),
                ('payment_last_updated_date', models.CharField(blank=True, max_length=200, null=True)),
                ('payment_account_class', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_accountclasses', to='homepageapp.accountclassmodel')),
                ('payment_customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_customers', to='homepageapp.customersnewsql02model')),
                ('payment_invoice_status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_invoicestatuses', to='homepageapp.invoicestatusmodel')),
                ('payment_repair_order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_repairorders', to='homepageapp.repairordersnewsql02model')),
                ('payment_transcation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_transactions', to='homepageapp.paymenttransactionsmodel')),
            ],
            options={
                'verbose_name': 'payment',
                'verbose_name_plural': 'payments',
                'db_table': 'payments_new_03',
                'ordering': ['-payment_id'],
            },
        ),
        migrations.CreateModel(
            name='PartsModel',
            fields=[
                ('part_id', models.AutoField(primary_key=True, serialize=False)),
                ('part_description', models.CharField(blank=True, max_length=500, null=True)),
                ('part_cost', models.DecimalField(decimal_places=2, max_digits=12)),
                ('part_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('part_is_tax_exempt', models.BooleanField(default=False)),
                ('part_category_id', models.IntegerField(null=True)),
                ('part_comments', models.CharField(blank=True, max_length=4000, null=True)),
                ('part_manufacturer_id', models.IntegerField(null=True)),
                ('part_list_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('part_is_user_entered_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('part_kit_id', models.IntegerField(null=True)),
                ('part_is_MPLG_item', models.BooleanField(default=False)),
                ('part_is_changed_MPLG_item', models.BooleanField(default=False)),
                ('part_is_core', models.BooleanField(default=False)),
                ('part_core_cost', models.DecimalField(decimal_places=2, max_digits=12)),
                ('part_core_list_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('part_fee_id', models.IntegerField(null=True)),
                ('part_is_deleted', models.BooleanField(default=False)),
                ('part_size', models.CharField(blank=True, max_length=20, null=True)),
                ('part_is_tire', models.BooleanField(default=False)),
                ('part_created_at', models.DateTimeField(auto_now_add=True)),
                ('part_last_updated_date', models.DateTimeField(auto_now=True, null=True)),
                ('part_account_class', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='parts_accountclasses', to='homepageapp.accountclassmodel')),
            ],
            options={
                'db_table': 'parts_new_03',
                'ordering': ['-part_id'],
            },
        ),
        migrations.CreateModel(
            name='PartItemModel',
            fields=[
                ('part_item_id', models.AutoField(primary_key=True, serialize=False)),
                ('part_discount_description_id', models.IntegerField(null=True)),
                ('part_item_is_user_entered_unit_sale', models.BooleanField(default=False)),
                ('part_item_is_user_entered_unit_cost', models.BooleanField(default=False)),
                ('part_item_quantity', models.DecimalField(decimal_places=2, max_digits=12, null=True)),
                ('part_item_unit_price', models.DecimalField(decimal_places=2, max_digits=12, null=True)),
                ('part_item_unit_list', models.DecimalField(decimal_places=2, max_digits=12, null=True)),
                ('part_item_unit_sale', models.DecimalField(decimal_places=2, max_digits=12, null=True)),
                ('part_item_unit_cost', models.DecimalField(decimal_places=2, max_digits=12, null=True)),
                ('part_item_part_no', models.CharField(blank=True, max_length=100, null=True)),
                ('part_item_is_confirmed', models.BooleanField(default=False)),
                ('part_item_vendor_code', models.CharField(blank=True, max_length=25, null=True)),
                ('part_item_manufacture_id', models.IntegerField(null=True)),
                ('part_item_invoice_number', models.CharField(blank=True, max_length=50, null=True)),
                ('part_item_commission_amount', models.DecimalField(decimal_places=2, max_digits=12, null=True)),
                ('part_item_is_committed', models.BooleanField(default=False)),
                ('part_item_is_quantity_confirmed', models.BooleanField(default=False)),
                ('part_item_confirmed_quantity', models.DecimalField(decimal_places=2, max_digits=12, null=True)),
                ('part_item_is_part_ordered', models.BooleanField(default=False)),
                ('part_item_is_core', models.BooleanField(default=False)),
                ('part_item_is_bundled_kit', models.BooleanField(default=False)),
                ('part_item_is_MPlg_item', models.BooleanField(default=False)),
                ('part_item_is_changed_MPlg_item', models.BooleanField(default=False)),
                ('part_item_part_type', models.CharField(blank=True, max_length=10, null=True)),
                ('part_item_size', models.CharField(blank=True, max_length=20, null=True)),
                ('part_item_is_tire', models.BooleanField(default=False)),
                ('part_item_vendor_id', models.IntegerField(null=True)),
                ('part_item_meta', models.CharField(blank=True, max_length=4000, null=True)),
                ('part_item_added_from_supplier', models.CharField(blank=True, max_length=50, null=True)),
                ('part_item_purchased_from_vendor', models.CharField(blank=True, max_length=50, null=True)),
                ('part_item_purchased_from_supplier', models.CharField(blank=True, max_length=50, null=True)),
                ('part_item_shipping_description', models.CharField(blank=True, max_length=50, null=True)),
                ('part_item_shipping_cost', models.CharField(blank=True, max_length=50, null=True)),
                ('part_item_last_updated_date', models.DateTimeField(auto_now=True, null=True)),
                ('line_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parts_lineitems', to='homepageapp.lineitemsnewsql02model')),
                ('part_item_part', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='parts_parts', to='homepageapp.partsmodel')),
            ],
            options={
                'verbose_name': 'partitem',
                'verbose_name_plural': 'partitems',
                'db_table': 'partitems_new_03',
                'ordering': ['-part_item_id'],
            },
        ),
        migrations.CreateModel(
            name='OrderRevisionNewSQL02Model',
            fields=[
                ('order_revision_id', models.AutoField(primary_key=True, serialize=False)),
                ('order_revision_sub_estimate_number', models.IntegerField(blank=True, null=True)),
                ('order_revision_date', models.DateTimeField(null=True)),
                ('time_of_call', models.DateTimeField(null=True)),
                ('order_revision_initiated_by', models.CharField(max_length=20, null=True)),
                ('order_revision_by_service_writer_id', models.IntegerField(null=True)),
                ('order_revision_authorizaton_by_name', models.CharField(blank=True, max_length=50, null=True)),
                ('order_revision_number_called', models.CharField(max_length=50, null=True)),
                ('order_revision_reason', models.CharField(max_length=200, null=True)),
                ('order_revision_current_estimate', models.DecimalField(decimal_places=2, max_digits=15)),
                ('order_revision_revision_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('order_revision_labor_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('order_revision_parts_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('order_revision_sublet_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('order_revision_haz_waste_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('order_revision_shop_supplies_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('order_revision_tax_amount_haz_mat', models.DecimalField(decimal_places=2, max_digits=15)),
                ('order_revision_tax_amount_shop_supplies', models.DecimalField(decimal_places=2, max_digits=15)),
                ('order_revision_discounted_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('order_revision_tax_charged', models.DecimalField(decimal_places=2, max_digits=15)),
                ('order_revision_tire_fee_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('order_revision_created_at', models.DateTimeField(auto_now_add=True)),
                ('order_revision_last_updated_date', models.DateTimeField(auto_now=True, null=True)),
                ('order_revision_repair_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orderrevisions', to='homepageapp.repairordersnewsql02model')),
                ('order_revision_vehicle_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='homepageapp.vehiclesnewsql02model')),
            ],
            options={
                'db_table': 'orderrevisions_new_03',
                'ordering': ['-order_revision_id'],
            },
        ),
        migrations.CreateModel(
            name='NoteItemsNewSQL02Model',
            fields=[
                ('note_item_id', models.AutoField(primary_key=True, serialize=False)),
                ('note_item_text', models.TextField(null=True)),
                ('note_item_is_printed_on_order', models.BooleanField(default=True)),
                ('note_item_tech_observation', models.TextField(null=True)),
                ('note_item_created_at', models.DateTimeField(auto_now_add=True)),
                ('note_item_last_updated_date', models.DateTimeField(auto_now=True, null=True)),
                ('line_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lineitem_noteitem', to='homepageapp.lineitemsnewsql02model')),
            ],
            options={
                'verbose_name': 'noteitem',
                'verbose_name_plural': 'noteitems',
                'db_table': 'noteitems_new_03',
                'ordering': ['-note_item_id'],
            },
        ),
        migrations.AddField(
            model_name='myshopvehicleconfigsmodel',
            name='myshop_submodel',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='myshop_submodels', to='homepageapp.submodelsmodel'),
        ),
        migrations.AddField(
            model_name='myshopvehicleconfigsmodel',
            name='myshop_transmission',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='myshop_transmissions', to='homepageapp.transmissionsmodel'),
        ),
        migrations.CreateModel(
            name='lineItemTaxesNewSQL02Model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line_item_tax_id', models.IntegerField(null=True)),
                ('line_item_tax_charged', models.DecimalField(decimal_places=2, max_digits=9)),
                ('line_item_tax_rate', models.DecimalField(decimal_places=2, max_digits=9)),
                ('line_item_tax_created_at', models.DateTimeField(auto_now_add=True)),
                ('line_item_tax_last_updated_date', models.DateTimeField(auto_now=True, null=True)),
                ('line_item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taxes', to='homepageapp.lineitemsnewsql02model')),
            ],
            options={
                'db_table': 'lineitemtaxes_new_03',
                'ordering': ['-line_item_id'],
            },
        ),
        migrations.CreateModel(
            name='LaborItemModel',
            fields=[
                ('labor_item_id', models.AutoField(primary_key=True, serialize=False)),
                ('labor_rate_description_id', models.IntegerField()),
                ('labor_item_is_user_entered_labor_rate', models.BooleanField()),
                ('labor_item_work_performed', models.TextField(blank=True, null=True)),
                ('labor_item_hours_charged', models.DecimalField(decimal_places=2, max_digits=10)),
                ('labor_item_symptom', models.CharField(max_length=4000, null=True)),
                ('labor_item_is_come_back_invoice', models.BooleanField(default=False, null=True)),
                ('labor_item_parts_estimate', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('labor_item_is_MPlg_item', models.IntegerField(default=False)),
                ('labor_item_is_Changed_MPlg_item', models.BooleanField(default=False)),
                ('labor_item_created_at', models.DateTimeField(auto_now_add=True)),
                ('labor_item_last_updated_date', models.DateTimeField(auto_now=True, null=True)),
                ('line_item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lineitem_laboritem', to='homepageapp.lineitemsnewsql02model')),
            ],
            options={
                'db_table': 'laboritems_new_03',
                'ordering': ['-labor_item_id'],
            },
        ),
        migrations.CreateModel(
            name='CustomerTaxesModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customertaxes_last_updated_date', models.DateTimeField(auto_now=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homepageapp.customersnewsql02model')),
                ('tax_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homepageapp.taxesmodel')),
            ],
            options={
                'verbose_name': 'customertax',
                'verbose_name_plural': 'customertaxes',
                'db_table': 'customertaxes_new_03',
                'ordering': ['-tax_id', '-customer_id'],
            },
        ),
        migrations.AddField(
            model_name='customersnewsql02model',
            name='emails',
            field=models.ManyToManyField(related_name='emails', through='homepageapp.CustomerEmailsNewSQL02Model', to='homepageapp.emailsnewsql02model'),
        ),
        migrations.AddField(
            model_name='customersnewsql02model',
            name='phones',
            field=models.ManyToManyField(related_name='phones', through='homepageapp.CustomerPhonesNewSQL02Model', to='homepageapp.phonesnewsql02model'),
        ),
        migrations.AddField(
            model_name='customersnewsql02model',
            name='taxes',
            field=models.ManyToManyField(related_name='taxes', through='homepageapp.CustomerTaxesModel', to='homepageapp.taxesmodel'),
        ),
        migrations.AddField(
            model_name='customerphonesnewsql02model',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homepageapp.customersnewsql02model'),
        ),
        migrations.AddField(
            model_name='customerphonesnewsql02model',
            name='phone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homepageapp.phonesnewsql02model'),
        ),
        migrations.AddField(
            model_name='customeremailsnewsql02model',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homepageapp.customersnewsql02model'),
        ),
        migrations.AddField(
            model_name='customeremailsnewsql02model',
            name='email',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homepageapp.emailsnewsql02model'),
        ),
        migrations.AddField(
            model_name='customeraddressesnewsql02model',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homepageapp.customersnewsql02model'),
        ),
    ]
