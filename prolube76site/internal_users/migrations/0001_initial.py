# Generated by Django 4.1.5 on 2023-07-10 04:33

from django.db import migrations, models
import internal_users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='InternalUser',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_first_name', models.CharField(max_length=50, verbose_name='first name')),
                ('user_last_name', models.CharField(max_length=50, verbose_name='last name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('password', models.CharField(max_length=128)),
                ('user_talent_id', models.IntegerField(null=True)),
                ('user_talent_profile_linkage_is_confirmed', models.BooleanField(default=False)),
                ('user_talent_profile_last_linked_date', models.DateTimeField(blank=True, null=True)),
                ('user_start_date', models.DateTimeField(null=True)),
                ('user_discharge_date', models.DateTimeField(blank=True, null=True)),
                ('user_is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('user_is_admin', models.BooleanField(default=False)),
                ('user_auth_group', models.PositiveSmallIntegerField(choices=[(0, 'visitor: ready-only'), (0, 'customer-group'), (2, 'internal-user-group'), (3, 'talent-management-group'), (4, 'accounting-group'), (5, 'it-group'), (6, 'manager-group'), (7, 'boardmember-group'), (88, 'master-shi-fu-group')], default=0)),
                ('user_created_at', models.DateTimeField(auto_now_add=True)),
                ('user_last_updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'internaluser',
                'verbose_name_plural': 'internalusers',
                'db_table': 'internalusers_new_03',
            },
            managers=[
                ('objects', internal_users.models.UserManager()),
            ],
        ),
    ]
