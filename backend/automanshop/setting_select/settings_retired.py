"""
2022-11-13
this default file will be replaced by multiple settings files based on running environments
, such as dev, prod, staging and etc.

Django settings for prolube76site project.

Generated by 'django-admin startproject' using Django 4.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
from pathlib import Path

from dotenv import load_dotenv

load_dotenv()  # take environment variables from .env.

# from .config.dev import *

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

try:
    SECRET_KEY = os.environ.get("DJANGO_SECRET_KEY")
except KeyError as e:
    raise RuntimeError("Could not find a Django SECRET_KEY in the environment variables") from e


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True


ADMINS=[]

# ALLOWED_HOSTS=[]
ALLOWED_HOSTS = ["www.theironmanhouse.com","127.0.0.1","localhost","wwww.76prolubeplus.com"]

# Application definition

INSTALLED_APPS = [
    'polls.apps.PollsConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'homepageapp',
    'polls'
]
# added on 2022-07-06 as an example customer settings for dev, staging or prod.
if os.environ.get('DJANGO._USE_DEBUG_TOOLBAR'):
    INSTALLED_APPS +=('debug_toolbar',)

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

if os.environ.get('DJANGO_USE_DEBUG_TOOLBAR'):
    MIDDLEWARE+=('debug_toolbar.DebugToolMiddleware',)

ROOT_URLCONF = 'prolube76site.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'prolube76site.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

# 2022-07-04- hide sensitivie environemnt variables such as the database url and login info.
# modified in November 2022.

if os.environ.get("DB_HOST"):
    # load the environment

    server = os.getenv("DB_SERVER")
    user = os.getenv("DB_USER")
    password = os.getenv("DB_PASSWORD")
    databaseName = os.getenv("DB_HOST")
# use the Microsoft provided MSSQL DRIVER for Django
    DATABASES = {
          "default": {
              "ENGINE": "mssql",
              "NAME": databaseName,
              "USER": user,
              "PASSWORD":password,
              "HOST": server,
              "PORT": "",
              "OPTIONS": {"driver": 'ODBC Driver 18 for SQL Server',
                          "extra_params": "TrustServerCertificate=yes; Encrypt=yes"
              },
          },
      }
# use the django-pyodbc package
    # DATABASES = {
    # 'default': {
    #     'ENGINE': "django_pyodbc",
    #     'HOST':server,
    #     'USER': user,
    #     'PASSWORD': password,
    #     'NAME': databaseName,
    #     'OPTIONS': {
    #         'host_is_server': True
    #     },
    # }
    # }
else:
    DATABASES = {
       'default': {
           'ENGINE': 'django.db.backends.sqlite3',
           'NAME': BASE_DIR / 'db.sqlite3',
       }
   }


# 'django.db.backends.postgresql'
# 'django.db.backends.mysql'
# 'django.db.backends.sqlite3'
# 'django.db.backends.oracle'

# use mysql database
    # DATABASES['default']={
    #      'ENGINE': 'django.db.backends.mysql',
    #      'HOST': os.environ.get('DB_HOST'),
    #      'NAME': os.environ.get('DB_DATABASE'),
    #      'USER': os.environ.get('MY_DB_USER'),
    #      'PASSWORD': os.environ.get('MY_DB_PASSWORD')
    #  }
# set this to False if you want to turn off pyodbc's connection pool
# DATABASE_CONNECTION_POOLING = False

# You can use a database backend that doesnâ€™t ship with Django by setting ENGINE to a fully-qualified path (i.e. mypackage.backends.whatever).

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/Los_Angeles' #'UTC'

USE_I18N = True

USE_TZ = True

LOCALE_PATHS = [BASE_DIR / "locale"]

# ==============================================================================
# STATIC FILES SETTINGS
# ==============================================================================

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

STATIC_ROOT = BASE_DIR.parent.parent / "static"

STATICFILES_DIRS = [
    BASE_DIR / "static",
    BASE_DIR / "static/bootstrap-5.0.2-dist/css",
    BASE_DIR / "static/bootstrap-5.0.2-dist/js",

]

STATICFILES_FINDERS = (
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
)




# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# added on 2022-11-13
# the reference website is https://simpleisbetterthancomplex.com/tutorial/2021/06/27/how-to-start-a-production-ready-django-project.html

# ==============================================================================
# MEDIA FILES SETTINGS
# ==============================================================================

MEDIA_URL = "/media/"

MEDIA_ROOT = BASE_DIR.parent.parent / "media"

# ==============================================================================
# THIRD-PARTY SETTINGS
# third-party libaries are Django Rest Framework or Django Crispy Forms, or etc.
# ==============================================================================


# ==============================================================================
# FIRST-PARTY SETTINGS

# ==============================================================================
