from .base import csrf_exempt, HttpResponse, stripe, settings
from stripe.error import SignatureVerificationError

@csrf_exempt
def stripe_webhook(request):
    
    # settings.STRIPE_WEBHOOK_SECRET 
    if settings.DEBUG and settings.DJANGO_PROD_ENV == False:    
        endpoint_secret = settings.STRIPE_WEBHOOK_SECRET_LOCAL or \
                        input('Enter the local webook secret generated by Stripe CLI...') 
                            # example: "whsec_9fc3fe3c0a22d70e9d62a1b89b6e0abe158aa5c4c8a769b965c78bf422e7219c"
    else:
        # STRIPE_LIVE_MODE_ON env is used to determine if the live mode is on or not
        if settings.STRIPE_LIVE_MODE_ON:
            endpoint_secret = settings.STRIPE_WEBHOOK_LIVE_SECRET
        endpoint_secret = settings.STRIPE_WEBHOOK_TEST_SECRET 
    payload = request.body
    sig_header = request.META['HTTP_STRIPE_SIGNATURE']
    event = None
    try:
        event = stripe.Webhook.construct_event(
            payload, sig_header, endpoint_secret,
            # settings.STRIPE_WEBHOOK_SECRET
        )
    except ValueError as e:
        # Invalid Payload
        return HttpResponse(status=400)
    except SignatureVerificationError as e:
        # Invalid signature
        return HttpResponse(status=400)
    

    # Passed signature verification
    return HttpResponse(status=200)
